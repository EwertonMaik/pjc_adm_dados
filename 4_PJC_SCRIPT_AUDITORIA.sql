-- CRIAÇÃO DA TABELA VENDA _AUDITORIA COM BASE NO SELECT DA TABELA VENDA
CREATE TABLE VENDA_AUDITORIA AS
	SELECT * FROM VENDA;
ALTER TABLE VENDA_AUDITORIA ADD COLUMN SITUACAO_REGISTRO VARCHAR(200); -- ADICIONANDO CAMPO PARA INDICAR SE O REGISTRO FOI INSERIDO, ATUALIZADO OU EXCLUÍDO
	
-- LIMPANDO REGISTROS COPIADOS DURANTE CRIAÇÃO DA TABELA
TRUNCATE TABLE VENDA_AUDITORIA;

-- CRIANDO FUNÇÃO(INSERT/UPDATE/DELETE) PARA SER CHAMADA PELA TRIGGER
CREATE OR REPLACE FUNCTION F_AUDITORIA_VENDA()
RETURNS TRIGGER AS $$
BEGIN
	IF (TG_OP = 'INSERT') THEN 
		INSERT INTO VENDA_AUDITORIA (CODIGO, DATA_CRIACAO, VALOR_FRETE, VALOR_DESCONTO,
		VALOR_TOTAL, STATUS, OBSERVACAO, DATA_HORA_ENTREGA, CODIGO_CLIENTE, CODIGO_USUARIO, SITUACAO_REGISTRO)
		VALUES (NEW.CODIGO, CURRENT_TIMESTAMP, NEW.VALOR_FRETE, NEW.VALOR_DESCONTO, NEW.VALOR_TOTAL, NEW.STATUS, NEW.OBSERVACAO,
		NEW.DATA_HORA_ENTREGA, NEW.CODIGO_CLIENTE, NEW.CODIGO_USUARIO, 'REGISTRO INSERIDO');
	RETURN NEW;
		
	ELSIF (TG_OP = 'UPDATE') THEN
		INSERT INTO VENDA_AUDITORIA (CODIGO, DATA_CRIACAO, VALOR_FRETE, VALOR_DESCONTO,
		VALOR_TOTAL, STATUS, OBSERVACAO, DATA_HORA_ENTREGA, CODIGO_CLIENTE, CODIGO_USUARIO, SITUACAO_REGISTRO)
		VALUES (NEW.CODIGO, CURRENT_TIMESTAMP, NEW.VALOR_FRETE, NEW.VALOR_DESCONTO, NEW.VALOR_TOTAL, NEW.STATUS, NEW.OBSERVACAO,
		NEW.DATA_HORA_ENTREGA, NEW.CODIGO_CLIENTE, NEW.CODIGO_USUARIO, 'REGISTRO ATUALIZADO ');
	RETURN NEW;
	
	ELSIF (TG_OP = 'DELETE') THEN
		INSERT INTO VENDA_AUDITORIA (CODIGO, DATA_CRIACAO, VALOR_FRETE, VALOR_DESCONTO,
		VALOR_TOTAL, STATUS, OBSERVACAO, DATA_HORA_ENTREGA, CODIGO_CLIENTE, CODIGO_USUARIO, SITUACAO_REGISTRO)
		VALUES (OLD.CODIGO, CURRENT_TIMESTAMP, OLD.VALOR_FRETE, OLD.VALOR_DESCONTO, OLD.VALOR_TOTAL, OLD.STATUS, OLD.OBSERVACAO,
		OLD.DATA_HORA_ENTREGA, OLD.CODIGO_CLIENTE, OLD.CODIGO_USUARIO, 'REGISTRO EXCLUIDO');
	RETURN OLD;
	END IF;
	RETURN NULL;
END;
$$LANGUAGE PLPGSQL;

-- CRIANDO TRIGGER QUE IRA MONITOR A TABELA VENDA, DISPARANDO A FUNÇÃO F_AUDITORIA_VENDA();
CREATE TRIGGER T_AUDITORIA_VENDA
AFTER INSERT OR UPDATE OR DELETE ON VENDA
FOR EACH ROW
EXECUTE PROCEDURE F_AUDITORIA_VENDA();

-- INSERT, UPDATE E DETELE PARA PODER TESTAR A TRIGGER
INSERT INTO VENDA (CODIGO, DATA_CRIACAO, VALOR_FRETE, VALOR_DESCONTO, VALOR_TOTAL, STATUS, OBSERVACAO, DATA_HORA_ENTREGA, CODIGO_CLIENTE, CODIGO_USUARIO)
VALUES (5, '05/11/2019', 50, 5, 50, 'C', 'OBS_05', '05/11/2019', 4, 4);
UPDATE VENDA SET OBSERVACAO = 'OBS_05_ATUALIZADO' WHERE CODIGO = 5;
DELETE FROM VENDA WHERE CODIGO = 5;

-- CONSULTANDO REGISTRO INSERIDO, ATUALIZADO E DELETADO
SELECT * FROM VENDA_AUDITORIA;


